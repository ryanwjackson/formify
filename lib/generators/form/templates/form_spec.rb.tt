# frozen_string_literal: true

require 'rails_helper'
require 'formify/spec_helpers'

describe Forms::<%= class_name %>, type: :form do
  include Formify::SpecHelpers

  # :attributes is used to initialize the form.
  # These values should result in a valid form.
  # You can override these in blocks or use let(:attributes_override) { { foo: bar } }
  let(:attributes) do
    {
<% all_attributes.each_with_index do |attr, i| -%>
      <%= attr %>: <%= attr.upcase %>_VALUE<%= ',' unless all_attributes.count == (i + 1)%>
<% end -%>
    }
  end

  it { expect_valid } # Expect the form to be valid
  it { expect(result).to be_success }
  it { expect(value).to be_a(<%= inferred_model_name %>) } # Model name inferred

  ### START: Attribute Expectations

<% all_attributes.each do |attr| -%>
  # Attribute: :<%= attr %>
  it { expect_error_with_missing_attribute(:<%= attr %>) }
  xit { expect_error_with_attribute_value(:<%= attr %>, <%= attr.upcase %>_BAD_VALUE, message: nil) } # :message is optional
  xit { expect_valid_with_attribute_value(:<%= attr %>, <%= attr.upcase %>_GOOD_VALUE) }

<% end -%>
  ### END: Attribute Expectations

  # Other Expectation Helpers
  # xit { expect_error_message(message) }
  # xit { expect_error_with_attribute(attribute) }
  # xit { expect_not_valid(attribute: nil, message: nil) } # :attribute and :message are optional
end
